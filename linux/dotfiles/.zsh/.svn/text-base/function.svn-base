#!/bin/zsh

#####
# stupid oneliners
#####
# change dir and list
cdl() {cd $1; ls}
# mount and cd
mcd() {mount $1 && cd $1 || print 'Hier darst nicht mounten!'}
# count mp3, e.g.: countmp3 /path/to/music
countmp3() {echo `find $1 -type f -name '*.mp3' | wc -l` 'MP3 files'}
# hex to decimal
x2d() {python -c "import sys; print int('0x'+sys.argv[1],0)" $1}
# decimal to hex
d2x() {python -c "import sys; print hex(int(sys.argv[1]))" $1}
# get version of webserver
wsversion() {lynx -head -dump $1}

#####################
# amarokcontrol
#####################
f() {amarok --next &>/dev/null && print 'amarok --next'}
r() {amarok --previous && print 'amarok --previous'}
s() {amarok --stop && print 'amarok --stop'}
t() {amarok --play-pause && print 'amarok --play-pause'}
a() {amarok --append $@ && print 'add: ' $@}
m() {amarok --toggle-playlist-window}

examples() {
    print 'FIND dirpath -type file/dir 'match' -exec command '{}' \;'
}
# testing
test() {
    print $@ | grep 'Troopers'
}


#unpack
unpack() {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -xvjf $1        ;;
            *.tar.gz)   tar -xvzf $1        ;;
            *.bz2)      bzip2 -d $1         ;;
            *.gz)       gunzip -d $1        ;;
            *.tar)      tar -xvf $1         ;;
            *.tgz)      tar -xvzf $1        ;;
            *.zip)      unzip $1            ;;
            *.rar)      unrar x $1          ;;
            *)          echo "'$1' Error. Please go away..." ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi

}


# generate thumbnail
genthumb() {
	echo "
<html>
 <head>
  <title>Images</title>
 </head>
 <body>" > index.html
 for f in *.(gif|jpeg|jpg|png)
 do
 	convert -size 100x200 "$f" -resize 100x200 thumb_"$f"
	echo "  <a href=\"$f\"><img src=\"thumb_$f\"></a>" >> index.html
 done
 echo "
 </body>
</html>" >> index.html
}

# status information
status() {
	print ""
        print "Date..: "$(date "+%Y-%m-%d %H:%M:%S")""
        print "Shell.: Zsh $ZSH_VERSION (PID = $$, $SHLVL nests)"
        print "Term..: $TTY ($TERM), $BAUD bauds, $COLUMNS x $LINES cars"
        print "Login.: $LOGNAME (UID = $EUID) on $HOST"
        print "System: $(cat /etc/[A-Za-z]*[_-][rv]e[lr]*)"
        print "Uptime:$(uptime)"
        print ""
}

# generate pdf from tex file
tex2pdf() {
	pdflatex $1
	pdflatex $1
	rm *.aux
	rm *.log
	rm *.toc
}

# take a screenshot
sshot () {
    sleep 5; import -window root sshot_`date +%x_%X`.jpg
}

# reload configs
src() {
    autoload -U zrecompile
    zrecompile -p ~/.zshenv
    zrecompile -p ~/.zshrc
    source ~/.zshenv
    source ~/.zshrc
}

# pack
packtar() {
    tar -czvf $1.tar.gz $1
}
packbz2() {
    tar --bzip2 -cvf $1.tar.bz2 $1
}

# TODO:
# replacespaces () {}
# backup() {}
#
